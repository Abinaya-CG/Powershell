def getmapList(){
def mapList=[]
def headers=[]
def file = readFile "optim_mapping.csv"
file.readLines().eachWithIndex { row, index ->
if (index == 0) { 
             headers = row.tokenize(",")
           }
           else {
             def tmpMap = [:]
             def cells = row.split(',').eachWithIndex { cell, cellIndex ->
             tmpMap[headers[cellIndex]] = cell
           }
           mapList.add(tmpMap)
           }
}
return mapList
}

pipeline {
  agent  {
   node {
        label 'optim' 
       }
  }
 parameters {
            activeChoiceParam('CHOICE-1') {
            description('Allows user choose from multiple choices')
            filterable()
            choiceType('SINGLE_SELECT')
            groovyScript {
                script('''
                  List result= getmapList()
                  "return [result]"
                ''')
                fallbackScript('"fallback choice"')
            }
        }
    }
  stages {
    stage('version') {
      steps {
        script{
          
          echo "{$Env}"
        }
      }
    }
    stage('hello') {
      steps {
        powershell 'Write-Output "HI!!"'
      }
    }
  }
}
