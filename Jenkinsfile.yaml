pipeline {
  agent  {
   node {
        label 'optim' 
       }
  }
  stages {
    stage('version') {
      steps {
        powershell '$PSVersionTable.PSVersion'
        
        script{
          def mapList=[]
          def headers=[]
          def file = readFile "optim_mapping.csv"
          def rows = file.readLines().eachWithIndex { row, rowIndex ->
           if (rowIndex == 0) { headers = row.split(',') }
           else {
             def tmpMap = [:]
             def cells = row.split(',').eachWithIndex { cell, cellIndex ->
             tmpMap[headers[cellIndex]] = cell
           }
           mapList << tmpMap
           }
          echo maplist
        }
      }
    }
    }
    stage('hello') {
      steps {
        powershell 'Write-Output "HI!!"'
      }
    }
  }
}
